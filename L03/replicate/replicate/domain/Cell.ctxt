#BlueJ class context
comment0.target=Cell
comment1.params=am\ row\ column\ active
comment1.target=Cell(AManufacturing,\ int,\ int,\ boolean)
comment1.text=\r\n\ Constructs\ a\ Cell\ with\ the\ given\ parameters.\r\n\r\n\ @param\ am\ \ \ \ \ \ The\ manufacturing\ environment\ the\ cell\ resides\ in.\r\n\ @param\ row\ \ \ \ \ The\ initial\ row\ position\ of\ the\ cell.\r\n\ @param\ column\ \ The\ initial\ column\ position\ of\ the\ cell.\r\n\ @param\ active\ \ Whether\ the\ cell\ is\ initially\ active.\r\n
comment10.params=
comment10.target=boolean\ getIsStuck()
comment10.text=\r\n\ Gets\ whether\ the\ cell\ is\ currently\ stuck.\r\n\r\n\ @return\ True\ if\ the\ cell\ is\ stuck,\ false\ otherwise.\r\n
comment2.params=
comment2.target=int\ getRow()
comment2.text=\r\n\ Gets\ the\ current\ row\ position\ of\ the\ cell.\r\n\r\n\ @return\ The\ row\ position\ of\ the\ cell.\r\n
comment3.params=
comment3.target=int\ getColumn()
comment3.text=\r\n\ Gets\ the\ current\ column\ position\ of\ the\ cell.\r\n\r\n\ @return\ The\ column\ position\ of\ the\ cell.\r\n
comment4.params=
comment4.target=java.awt.Color\ getColor()
comment4.text=\r\n\ Gets\ the\ color\ of\ the\ cell.\r\n\r\n\ @return\ The\ color\ of\ the\ cell.\r\n
comment5.params=
comment5.target=void\ decide()
comment5.text=\r\n\ Determines\ the\ next\ state\ of\ the\ cell\ based\ on\ the\ current\ simulation\ step.\r\n\ Alternates\ between\ ACTIVE\ and\ INACTIVE\ states.\r\n
comment6.params=
comment6.target=void\ change()
comment6.text=\r\n\ Updates\ the\ state\ of\ the\ cell\ to\ its\ next\ state\ and\ checks\ if\ it\ should\ be\ stuck.\r\n\ If\ the\ cell\ is\ adjacent\ to\ a\ StickyWall,\ it\ becomes\ stuck\ and\ stops\ moving.\r\n
comment7.params=
comment7.target=boolean\ isAdjacentToStickyWall()
comment7.text=\r\n\ Checks\ if\ the\ cell\ is\ adjacent\ to\ or\ on\ top\ of\ a\ StickyWall.\r\n\r\n\ @return\ True\ if\ the\ cell\ is\ adjacent\ to\ a\ StickyWall,\ false\ otherwise.\r\n
comment8.params=
comment8.target=int\ neighborsActive()
comment8.text=\r\n\ Returns\ the\ number\ of\ active\ neighboring\ cells.\r\n\r\n\ @return\ The\ number\ of\ active\ neighbors.\r\n
comment9.params=dr\ dc
comment9.target=boolean\ neighborIsEmpty(int,\ int)
comment9.text=\r\n\ Checks\ if\ a\ neighboring\ cell\ in\ a\ specific\ direction\ is\ empty.\r\n\r\n\ @param\ dr\ The\ row\ offset\ for\ the\ neighbor.\r\n\ @param\ dc\ The\ column\ offset\ for\ the\ neighbor.\r\n\ @return\ True\ if\ the\ neighboring\ cell\ is\ empty,\ false\ otherwise.\r\n
numComments=11
