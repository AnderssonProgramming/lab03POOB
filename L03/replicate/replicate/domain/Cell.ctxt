#BlueJ class context
comment0.target=Cell
comment0.text=\r\n\ Information\ about\ a\ cell\ in\ the\ manufacturing\ lattice.\r\n\ <br>\r\n\ <b>(aManufacturing,\ row,\ column,\ age,\ state,\ nextState,\ color)</b>\r\n\r\n\ @author\ Andersson\ David\ S\u00E1nchez\ M\u00E9ndez\r\n\ @author\ Cristian\ Santiago\ Pedraza\ Rodr\u00EDguez\r\n\ @version\ 2024\r\n
comment1.params=am\ row\ column\ active
comment1.target=Cell(AManufacturing,\ int,\ int,\ boolean)
comment1.text=\r\n\ Creates\ a\ new\ cell\ at\ the\ specified\ row\ and\ column\ in\ the\ given\ manufacturing\ lattice.\r\n\ @param\ am\ The\ manufacturing\ lattice\ to\ which\ the\ cell\ belongs.\r\n\ @param\ row\ The\ row\ index\ of\ the\ cell.\r\n\ @param\ column\ The\ column\ index\ of\ the\ cell.\r\n\ @param\ active\ The\ initial\ state\ of\ the\ cell,\ active\ or\ inactive.\r\n
comment10.params=
comment10.target=boolean\ getIsStuck()
comment10.text=\r\n\ Gets\ whether\ the\ cell\ is\ currently\ stuck.\r\n\r\n\ @return\ True\ if\ the\ cell\ is\ stuck,\ false\ otherwise.\r\n
comment2.params=
comment2.target=int\ getRow()
comment2.text=\r\n\ Returns\ the\ row\ index\ of\ the\ cell.\r\n\ @return\ The\ row\ index.\r\n
comment3.params=
comment3.target=int\ getColumn()
comment3.text=\r\n\ Returns\ the\ column\ index\ of\ the\ cell.\r\n\ @return\ The\ column\ index.\r\n
comment4.params=
comment4.target=java.awt.Color\ getColor()
comment4.text=\r\n\ Returns\ the\ color\ of\ the\ cell.\r\n\ @return\ The\ color\ of\ the\ cell.\r\n
comment5.params=
comment5.target=void\ decide()
comment5.text=\r\n\ Decides\ the\ next\ state\ of\ the\ cell\ based\ on\ a\ given\ rule.\r\n
comment6.params=
comment6.target=void\ change()
comment6.text=\r\n\ Changes\ the\ current\ state\ of\ the\ cell\ to\ the\ next\ state.\r\n
comment7.params=
comment7.target=boolean\ isAdjacentToStickyWall()
comment7.text=\r\n\ Checks\ if\ the\ cell\ is\ adjacent\ to\ or\ on\ top\ of\ a\ StickyWall.\r\n\r\n\ @return\ True\ if\ the\ cell\ is\ adjacent\ to\ a\ StickyWall,\ false\ otherwise.\r\n
comment8.params=
comment8.target=int\ neighborsActive()
comment8.text=\r\n\ Counts\ the\ number\ of\ active\ neighboring\ cells\ around\ this\ cell.\r\n\ @return\ The\ number\ of\ active\ neighboring\ cells.\r\n
comment9.params=dr\ dc
comment9.target=boolean\ neighborIsEmpty(int,\ int)
comment9.text=\r\n\ Checks\ if\ a\ neighboring\ position\ relative\ to\ this\ cell\ is\ empty.\r\n\ @param\ dr\ The\ row\ offset\ from\ the\ current\ cell.\r\n\ @param\ dc\ The\ column\ offset\ from\ the\ current\ cell.\r\n\ @return\ {@code\ true}\ if\ the\ neighboring\ position\ is\ empty,\ {@code\ false}\ otherwise.\r\n
numComments=11
