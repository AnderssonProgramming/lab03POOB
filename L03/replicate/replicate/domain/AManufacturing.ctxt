#BlueJ class context
comment0.target=AManufacturing
comment0.text=\r\n\ Class\ representing\ a\ manufacturing\ lattice\ where\ different\ types\ of\ Things\ can\ be\ placed.\r\n\ The\ lattice\ consists\ of\ a\ grid\ where\ various\ cells\ and\ other\ entities\ can\ be\ initialized\ and\ manipulated.\r\n\r\n\ @author\ Andersson\ David\ S\u00E1nchez\ M\u00E9ndez\r\n\ @author\ Cristian\ Santiago\ Pedraza\ Rodr\u00EDguez\r\n\ @version\ 2024\r\n
comment1.params=
comment1.target=AManufacturing()
comment1.text=\r\n\ Constructor\ for\ AManufacturing\ class.\r\n\ Initializes\ the\ lattice\ with\ null\ values\ and\ sets\ up\ the\ initial\ pattern\ of\ Things.\r\n
comment10.params=
comment10.target=void\ ticTac()
comment10.text=\r\n\ Performs\ a\ tic-tac\ cycle\ on\ all\ Things\ in\ the\ lattice.\r\n\ In\ each\ cycle,\ the\ Things\ decide\ their\ next\ state\ and\ then\ change\ their\ state\ accordingly.\r\n
comment2.params=
comment2.target=int\ getSize()
comment2.text=\r\n\ Returns\ the\ size\ of\ the\ lattice.\r\n\ @return\ the\ size\ of\ the\ lattice.\r\n
comment3.params=r\ c
comment3.target=Thing\ getThing(int,\ int)
comment3.text=\r\n\ Retrieves\ a\ Thing\ from\ a\ specific\ position\ in\ the\ lattice.\r\n\ @param\ r\ the\ row\ index.\r\n\ @param\ c\ the\ column\ index.\r\n\ @return\ the\ Thing\ at\ the\ specified\ position,\ or\ null\ if\ none\ exists.\r\n
comment4.params=r\ c\ e
comment4.target=void\ setThing(int,\ int,\ Thing)
comment4.text=\r\n\ Places\ a\ Thing\ in\ a\ specific\ position\ in\ the\ lattice.\r\n\ @param\ r\ the\ row\ index.\r\n\ @param\ c\ the\ column\ index.\r\n\ @param\ e\ the\ Thing\ to\ be\ placed\ at\ the\ specified\ position.\r\n
comment5.params=
comment5.target=void\ someThings()
comment5.text=\r\n\ Initializes\ some\ specific\ Things\ in\ the\ lattice.\r\n\ This\ includes\ cells,\ tourist\ cells,\ poison,\ and\ reflective\ cells.\r\n
comment6.params=
comment6.target=void\ initializePattern()
comment6.text=\r\n\ Initializes\ the\ lattice\ pattern\ with\ inactive\ original\ cells.\r\n\ Sets\ up\ a\ 10x10\ sub-grid\ in\ the\ bottom-left\ corner\ with\ active\ cells.\r\n
comment7.params=r\ c
comment7.target=int\ neighborsActive(int,\ int)
comment7.text=\r\n\ Counts\ the\ number\ of\ active\ neighboring\ Things\ around\ a\ specified\ position.\r\n\ @param\ r\ the\ row\ index\ of\ the\ target\ position.\r\n\ @param\ c\ the\ column\ index\ of\ the\ target\ position.\r\n\ @return\ the\ number\ of\ active\ neighboring\ Things.\r\n
comment8.params=r\ c
comment8.target=boolean\ isEmpty(int,\ int)
comment8.text=\r\n\ Checks\ if\ a\ specific\ position\ in\ the\ lattice\ is\ empty.\r\n\ @param\ r\ the\ row\ index.\r\n\ @param\ c\ the\ column\ index.\r\n\ @return\ {@code\ true}\ if\ the\ position\ is\ empty,\ {@code\ false}\ otherwise.\r\n
comment9.params=r\ c
comment9.target=boolean\ inLatice(int,\ int)
comment9.text=\r\n\ Checks\ if\ the\ specified\ position\ is\ within\ the\ bounds\ of\ the\ lattice.\r\n\ @param\ r\ the\ row\ index.\r\n\ @param\ c\ the\ column\ index.\r\n\ @return\ {@code\ true}\ if\ the\ position\ is\ within\ bounds,\ {@code\ false}\ otherwise.\r\n
numComments=11
